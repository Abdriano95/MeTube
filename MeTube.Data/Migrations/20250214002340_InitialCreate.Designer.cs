// <auto-generated />
using System;
using MeTube.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeTube.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250214002340_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeTube.Data.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Great educational content!",
                            DateAdded = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Very informative video",
                            DateAdded = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Amazing gaming content",
                            DateAdded = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            VideoId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "Love this game!",
                            DateAdded = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4,
                            VideoId = 2
                        });
                });

            modelBuilder.Entity("MeTube.Data.Entity.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateWatched")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoId");

                    b.ToTable("Histories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateWatched = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateWatched = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateWatched = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            VideoId = 2
                        },
                        new
                        {
                            Id = 4,
                            DateWatched = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4,
                            VideoId = 2
                        });
                });

            modelBuilder.Entity("MeTube.Data.Entity.Like", b =>
                {
                    b.Property<int>("VideoID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("UserID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("VideoID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            VideoID = 1,
                            UserID = 2
                        },
                        new
                        {
                            VideoID = 1,
                            UserID = 3
                        },
                        new
                        {
                            VideoID = 1,
                            UserID = 4
                        },
                        new
                        {
                            VideoID = 2,
                            UserID = 1
                        },
                        new
                        {
                            VideoID = 2,
                            UserID = 3
                        },
                        new
                        {
                            VideoID = 3,
                            UserID = 1
                        },
                        new
                        {
                            VideoID = 3,
                            UserID = 2
                        },
                        new
                        {
                            VideoID = 4,
                            UserID = 5
                        });
                });

            modelBuilder.Entity("MeTube.Data.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("User");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Password = "adminpwd123",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john@example.com",
                            Password = "password123",
                            Role = "User",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jane@example.com",
                            Password = "password456",
                            Role = "User",
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 4,
                            Email = "tech@example.com",
                            Password = "techpass789",
                            Role = "User",
                            Username = "tech_guru"
                        },
                        new
                        {
                            Id = 5,
                            Email = "sports@example.com",
                            Password = "sportspass789",
                            Role = "User",
                            Username = "sports_fan"
                        });
                });

            modelBuilder.Entity("MeTube.Data.Entity.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlobName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlobName = "541bc83a-c39b-41e0-93e2-b353a5957e0b_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Educational video about animation techniques",
                            Genre = "Education",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Learn Animation Basics",
                            UserId = 1,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/541bc83a-c39b-41e0-93e2-b353a5957e0b_faststart.mp4"
                        },
                        new
                        {
                            Id = 2,
                            BlobName = "e1543acd-86de-46fb-994f-ee01dc9e4947_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fun gaming moments with Big Buck Bunny",
                            Genre = "Gaming",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Gaming Adventures",
                            UserId = 2,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/e1543acd-86de-46fb-994f-ee01dc9e4947_faststart.mp4"
                        },
                        new
                        {
                            Id = 3,
                            BlobName = "da06b2df-5389-4f6b-9969-54b538c8062d_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Weekly entertainment highlights",
                            Genre = "Entertainment",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Entertainment Weekly",
                            UserId = 3,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/da06b2df-5389-4f6b-9969-54b538c8062d_faststart.mp4"
                        },
                        new
                        {
                            Id = 4,
                            BlobName = "c1e82a0c-a48c-46aa-b33b-bf766ff77449_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest in technology",
                            Genre = "Technology",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Tech News Today",
                            UserId = 4,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/c1e82a0c-a48c-46aa-b33b-bf766ff77449_faststart.mp4"
                        },
                        new
                        {
                            Id = 5,
                            BlobName = "a6e61589-a50a-482e-b3ec-5ccfb0ec04d6_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Best sports moments of the week",
                            Genre = "Sports",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Sports Highlights",
                            UserId = 5,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/a6e61589-a50a-482e-b3ec-5ccfb0ec04d6_faststart.mp4"
                        },
                        new
                        {
                            Id = 6,
                            BlobName = "fc30b0ae-c983-4af5-b9b6-6ec3a1b5609a_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Amazing music compilation",
                            Genre = "Music",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Music Session",
                            UserId = 1,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/fc30b0ae-c983-4af5-b9b6-6ec3a1b5609a_faststart.mp4"
                        },
                        new
                        {
                            Id = 7,
                            BlobName = "b13bb460-5ec7-4e44-8f06-88c161aa10c6_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest news updates",
                            Genre = "News",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Breaking News",
                            UserId = 2,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/b13bb460-5ec7-4e44-8f06-88c161aa10c6_faststart.mp4"
                        },
                        new
                        {
                            Id = 8,
                            BlobName = "174c4367-4740-4166-a714-4774d113834d_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Random entertaining content",
                            Genre = "Other",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Miscellaneous Fun",
                            UserId = 3,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/174c4367-4740-4166-a714-4774d113834d_faststart.mp4"
                        },
                        new
                        {
                            Id = 9,
                            BlobName = "6495e892-4155-47e1-94b8-cbe317691e4f_faststart.mp4",
                            DateUploaded = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learning about technology",
                            Genre = "Education",
                            ThumbnailUrl = "https://looplegionmetube20250129.blob.core.windows.net/thumbnails/Big_Buck_Bunny_thumbnail_vlc.png",
                            Title = "Educational Tech",
                            UserId = 4,
                            VideoUrl = "https://looplegionmetube20250129.blob.core.windows.net/videos/6495e892-4155-47e1-94b8-cbe317691e4f_faststart.mp4"
                        });
                });

            modelBuilder.Entity("MeTube.Data.Entity.Comment", b =>
                {
                    b.HasOne("MeTube.Data.Entity.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeTube.Data.Entity.Video", "Video")
                        .WithMany("Comments")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("MeTube.Data.Entity.History", b =>
                {
                    b.HasOne("MeTube.Data.Entity.User", "User")
                        .WithMany("Histories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeTube.Data.Entity.Video", "Video")
                        .WithMany("Histories")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("MeTube.Data.Entity.Like", b =>
                {
                    b.HasOne("MeTube.Data.Entity.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("MeTube.Data.Entity.Video", "Video")
                        .WithMany("Likes")
                        .HasForeignKey("VideoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("MeTube.Data.Entity.Video", b =>
                {
                    b.HasOne("MeTube.Data.Entity.User", "User")
                        .WithMany("Videos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MeTube.Data.Entity.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Histories");

                    b.Navigation("Likes");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("MeTube.Data.Entity.Video", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Histories");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
