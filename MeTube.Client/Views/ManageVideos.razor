@page "/videos/manage"
@inject ManageVideosViewModel ViewModel

<link href="css/manage_videos.css" rel="stylesheet" />

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Manage Your Videos</h2>
        <a href="/videos/upload" class="btn btn-primary">
            <i class="bi bi-cloud-upload"></i> Upload New Video
        </a>
    </div>

    @if (ViewModel.IsLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
    {
        <div class="alert alert-danger">
            @ViewModel.ErrorMessage
        </div>
    }
    else if (!ViewModel.UserVideos.Any())
    {
        <div class="text-center">
            <p class="lead">You haven't uploaded any videos yet.</p>
            <a href="/videos/upload" class="btn btn-primary">Upload Your First Video</a>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover video-table">
                <thead>
                    <tr>
                        <th>Thumbnail</th>
                        <th>Title</th>
                        <th>Upload Date</th>
                        <th>Description</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var video in ViewModel.UserVideos)
                    {
                        <tr>
                            <td class="thumbnail-cell">
                                <img src="@video.ThumbnailUrl" alt="@video.Title" class="video-thumbnail" />
                            </td>
                            <td class="align-middle">
                                <a href="/video/@video.Id" class="video-title">@video.Title</a>
                            </td>
                            <td class="align-middle">@video.DateUploaded.ToString("MMM dd, yyyy")</td>
                            <td class="align-middle description-cell">
                                @(video.Description?.Length > 100
                                    ? video.Description.Substring(0, 97) + "..."
                                    : video.Description)
                            </td>
                            <td class="align-middle">
                                <div class="btn-group">
                                    <button @onclick="() => ViewModel.NavigateToEdit(video.Id)"
                                            class="btn btn-outline-primary btn-sm">
                                        <i class="bi bi-pencil"></i> Edit
                                    </button>
                                    <button @onclick="() => ViewModel.DeleteVideoAsync(video)"
                                            class="btn btn-outline-danger btn-sm ms-2">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadUserVideosAsync();
    }
}