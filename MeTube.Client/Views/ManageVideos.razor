@page "/manage-videos"
@using MeTube.Client.Models
@using MeTube.Client.Services   
@inject IVideoService VideoService
@inject NavigationManager NavigationManager

<PageTitle>Manage Videos - MeTube</PageTitle>

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold">Manage Videos</h1>
        <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
                @onclick="@(() => NavigationManager.NavigateTo("/upload"))">
            Upload New Video
        </button>
    </div>

    @if (ViewModel.IsLoading)
    {
        <div class="flex justify-center items-center h-32">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
        </div>
    }
    else if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
            @ViewModel.ErrorMessage
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var video in ViewModel.Videos)
            {
                <div class="bg-white rounded-lg shadow-md overflow-hidden cursor-pointer"
                     @onclick="@(() => NavigationManager.NavigateTo($"/edit-video/{video.Id}"))">
                    <img src="@video.ThumbnailUrl" alt="@video.Title"
                         class="w-full h-48 object-cover" />
                    <div class="p-4">
                        <h2 class="text-xl font-semibold mb-2">@video.Title</h2>
                        <p class="text-gray-600">@video.Description</p>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private ManageVideosViewModel ViewModel { get; set; } = null!;

    protected override void OnInitialized()
    {
        ViewModel = new ManageVideosViewModel(VideoService, NavigationManager);
        base.OnInitialized();
    }
}