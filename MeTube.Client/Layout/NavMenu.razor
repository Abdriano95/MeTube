@using MeTube.Client.Services
@inject IUserService UserService
@using MeTube.Client.ViewModels.LoginViewModels
@inject LoginViewModel ViewModel
@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MeTube.Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

       
        @if (!IsAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login" aria-hidden="true" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }

        @if (IsAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="manageaccounts" aria-hidden="true" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Manage Accounts
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login"  @onclick="ViewModel.Logout">
                    <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }

    </nav>
</div>

@code {

    private bool IsAuthenticated = false;
    
    protected override async Task OnInitializedAsync()
    {
        IsAuthenticated = await UserService.IsUserAuthenticated();
    }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
